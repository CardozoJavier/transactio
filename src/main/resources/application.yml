# Application Configuration
spring:
  output:
    ansi:
      enabled: always
  application:
    name: transactio
  
  # Database Configuration (H2)
  datasource:
    url: jdbc:h2:mem:transactiodb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.transactio.event"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.transactio.event.PaymentEvent"
      auto-offset-reset: earliest
      group-id:
        notification: notification-service-group
    topic:
      payment-events: payment-events

# Server Configuration
server:
  port: 8080

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

# Application Info
info:
  app:
    name: Transactio Payment Service
    description: Payment processing service for fintech applications
    version: 1.0.0
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'